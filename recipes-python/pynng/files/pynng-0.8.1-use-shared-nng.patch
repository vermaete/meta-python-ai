Upstream-Status: Inappropriate [Yocto specific]

diff -durpN pynng-0.8.1.old/build_pynng.py pynng-0.8.1/build_pynng.py
--- pynng-0.8.1.old/build_pynng.py	2025-01-13 03:41:51.000000000 +0100
+++ pynng-0.8.1/build_pynng.py	2025-03-06 13:45:53.398035144 +0100
@@ -29,13 +29,8 @@ if sys.platform == "win32":
 #    objects = None
 else:
     incdirs = ["nng/include"]
-    objects = [
-        "./nng/build/libnng.a",
-        "./mbedtls/prefix/lib/libmbedtls.a",
-        "./mbedtls/prefix/lib/libmbedx509.a",
-        "./mbedtls/prefix/lib/libmbedcrypto.a",
-    ]
-    libraries = ["pthread"]
+    objects = []
+    libraries = ["nng", "pthread"]
     machine = os.uname().machine
     # this is a pretty heuristic... but let's go with it anyway.
     # it would be better to get linker information from cmake somehow.
diff -durpN pynng-0.8.1.old/setup.cfg pynng-0.8.1/setup.cfg
--- pynng-0.8.1.old/setup.cfg	2025-01-13 03:43:01.313147000 +0100
+++ pynng-0.8.1/setup.cfg	2025-03-06 13:46:18.741355762 +0100
@@ -1,11 +1,3 @@
-[build_nng]
-repo = https://github.com/nanomsg/nng
-rev = v1.6.0
-
-[build_mbedtls]
-repo = https://github.com/ARMmbed/mbedtls.git
-rev = v3.5.1
-
 [build_ext]
 inplace = 1
 
diff -durpN pynng-0.8.1.old/setup.py pynng-0.8.1/setup.py
--- pynng-0.8.1.old/setup.py	2025-01-13 03:41:51.000000000 +0100
+++ pynng-0.8.1/setup.py	2025-03-06 13:48:29.218006420 +0100
@@ -4,12 +4,6 @@ import platform
 import shutil
 import sys
 
-if platform.machine() == "i686" and platform.system() == "Linux":
-    # mbedtls v3.5.1 will not build without these flags on 32-bit linux.
-    # https://github.com/Mbed-TLS/mbedtls/issues/8334
-    # this is hopefully going to be fixed in another release.
-    # There is probably a better way to do this...
-    os.environ["CFLAGS"] = "-mpclmul -msse2 -maes"
 from setuptools import Command, setup, find_packages
 from setuptools.command.build_ext import build_ext
 
@@ -156,8 +150,6 @@ class BuildBuild(build_ext):
         """
         Running...
         """
-        self.run_command("build_mbedtls")
-        self.run_command("build_nng")
 
         build_ext.run(self)  # proceed with "normal" build steps
 
@@ -167,8 +159,6 @@ with open("README.md", "r", encoding="ut
 
 setup(
     cmdclass={
-        "build_mbedtls": BuildMbedTls,
-        "build_nng": BuildNng,
         "build_ext": BuildBuild,
     },
     cffi_modules=["build_pynng.py:ffibuilder"],
