From 1e0d2860e118eed922fec31a1efb28bc3009ed07 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20B=C3=B6sz=C3=B6rm=C3=A9nyi?=
 <zboszor@gmail.com>
Date: Wed, 14 May 2025 15:57:05 +0200
Subject: [PATCH 1/2] Use pkg-config to detect libpng
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Zoltán Böszörményi <zboszor@gmail.com>
Upstream-Status: Inappropriate [Yocto specific]
---
 setup.py | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/setup.py b/setup.py
index a42aef6972..15df41a528 100644
--- a/setup.py
+++ b/setup.py
@@ -202,25 +202,25 @@ def make_C_extension():
 def find_libpng():
     # Returns (found, include dir, library dir, library name)
     if sys.platform in ("linux", "darwin", "aix"):
-        libpng_config = shutil.which("libpng-config")
-        if libpng_config is None:
-            warnings.warn("libpng-config not found")
+        pkgconf = shutil.which("pkg-config")
+        if pkgconf is None:
+            warnings.warn("pkg-config not found")
             return False, None, None, None
         min_version = parse_version("1.6.0")
         png_version = parse_version(
-            subprocess.run([libpng_config, "--version"], stdout=subprocess.PIPE).stdout.strip().decode("utf-8")
+            subprocess.run([pkgconf, "--modversion", "libpng"], stdout=subprocess.PIPE).stdout.strip().decode("utf-8")
         )
         if png_version < min_version:
             warnings.warn("libpng version {png_version} is less than minimum required version {min_version}")
             return False, None, None, None
 
         include_dir = (
-            subprocess.run([libpng_config, "--I_opts"], stdout=subprocess.PIPE)
+            subprocess.run([pkgconf, "--cflags-only-I", "libpng"], stdout=subprocess.PIPE)
             .stdout.strip()
             .decode("utf-8")
             .split("-I")[1]
         )
-        library_dir = subprocess.run([libpng_config, "--libdir"], stdout=subprocess.PIPE).stdout.strip().decode("utf-8")
+        library_dir = subprocess.run([pkgconf, "--libdir", "libpng"], stdout=subprocess.PIPE).stdout.strip().decode("utf-8")
         library = "png"
     else:  # Windows
         pngfix = shutil.which("pngfix")
-- 
2.49.0

